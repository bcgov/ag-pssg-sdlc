apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gatling
  namespace: 5b7aa5-tools
spec:
  params:
    - default: '30'
      description: The duration of running simulations
      name: DURATION
      type: string
    - default: '10'
      description: The number of concurrent users
      name: CONCURRENT_USERS
      type: string
    - description: The application under test url
      name: APP_URL
      type: string
    - default: 'http://reports-repo:8080'
      description: >-
        The reports repository host based on
        https://github.com/chmouel/openshift-django-uploader
      name: REPORTS_REPO_HOST
      type: string
    - default: reports
      description: The reports repository username
      name: REPORTS_REPO_USERNAME
      type: string
    - default: reports
      description: The reports repository password
      name: REPORTS_REPO_PASSWORD
      type: string
    - default: test
      description: The test dir
      name: TEST_DIR
      type: string
  steps:
    - env:
        - name: PIPELINERUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: 'metadata.labels[''tekton.dev/pipelineRun'']'
      image: 'quay.io/siamaksade/gatling:latest'
      name: run-tests
      resources: {}
      script: >
        #!/usr/bin/env bash


        set -x

        ls -A $(workspaces.source.path)/$(params.TEST_DIR)/

        cat
        $(workspaces.source.path)/$(params.TEST_DIR)/AddVisitSimulation.scala


        cd /opt/gatling/

        ls -lhrt


        # set simulation params

        export JAVA_OPTS="-DtestDuration=$(params.CONCURRENT_USERS)
        -DuserCount=$(params.DURATION) -Dserver=$(params.APP_URL)"


        # run simulation



        /opt/gatling/bin/gatling.sh -rd "Pims App Performance Test" -sf
        $(workspaces.source.path)/$(params.TEST_DIR)


        # upload results

        REPORT=$(ls -td /opt/gatling/results/* | head -1)

        for f in $(find $REPORT/ -type f); do
          curl -u $(params.REPORTS_REPO_USERNAME):$(params.REPORTS_REPO_PASSWORD) -F path=$PIPELINERUN_NAME${f#/opt/gatling/results} -X POST -F file=@${f} $(params.REPORTS_REPO_HOST)/upload; echo ""
        done
      workingDir: $(workspaces.source.path)
  workspaces:
    - description: The workspace consisting of project.
      name: source
